<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:cc="http://xmlns.jcp.org/jsf/composite"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pe="http://primefaces.org/ui/extensions"
	xmlns:cyk="http://primefaces.jsf.web.utility.cyk.org">
	
	<ui:decorate template="/template.xhtml">
		<ui:define name="valueIsNotNull">
			<c:set var="components" value="#{value.get()}" />
			<cyk:layout value="#{value.layout}" >
				<ui:define name="layoutContent">
					<c:forEach items="#{components}" var="indexComponent" >
						<cyk:layoutItem value="#{indexComponent.layoutItem}" >
							<ui:define name="layoutItemContent">
								<c:if test="#{indexComponent.throwable == null}">
									<c:choose>
										
										<!-- Output -->
										
										<c:when test="#{componentHelper.isOutputStringText(indexComponent)}">
											<cyk:outputText value="#{indexComponent}" />
										</c:when>
										
										<c:when test="#{componentHelper.isOutputStringLabel(indexComponent)}">
											<cyk:outputLabel value="#{indexComponent}" />
										</c:when>
										
										<c:when test="#{componentHelper.isOutputStringLink(indexComponent)}">
											<cyk:outputLink value="#{indexComponent}" />
										</c:when>
										
										<c:when test="#{componentHelper.isOutputFile(indexComponent)}">
											<cyk:outputFile value="#{indexComponent}" />
										</c:when>
										
										<!-- Input -->
										
										<c:when test="#{componentHelper.isInputStringLineOne(indexComponent)}">
											<cyk:inputText value="#{indexComponent}" />
										</c:when>
										<c:when test="#{componentHelper.isInputStringLineMany(indexComponent)}">
											<cyk:inputTextarea value="#{indexComponent}" />
										</c:when>
										<c:when test="#{componentHelper.isInputStringEditor(indexComponent)}">
											<cyk:inputEditor value="#{indexComponent}" />
										</c:when>
										<c:when test="#{componentHelper.isInputBooleanCheckBox(indexComponent)}">
											<cyk:selectBooleanCheckbox value="#{indexComponent}" />
										</c:when>
										<c:when test="#{componentHelper.isInputBooleanButton(indexComponent)}">
											<cyk:selectBooleanButton value="#{indexComponent}" />
										</c:when>
										<c:when test="#{componentHelper.isInputChoiceOneCombo(indexComponent)}">
											<cyk:selectOneMenu value="#{indexComponent}" />
										</c:when>
										<c:when test="#{componentHelper.isInputChoiceOneRadio(indexComponent)}">
											<cyk:selectOneRadio value="#{indexComponent}" />
										</c:when>
										<c:when test="#{componentHelper.isInputChoiceOneAutoComplete(indexComponent)}">
											<cyk:autoComplete value="#{indexComponent}" />
										</c:when>
										<c:when test="#{componentHelper.isInputChoiceManyCheckBox(indexComponent)}">
											<cyk:selectManyCheckbox value="#{indexComponent}" />
										</c:when>
										<c:when test="#{componentHelper.isInputChoiceManyAutoComplete(indexComponent)}">
											<cyk:autoComplete value="#{indexComponent}" />
										</c:when>
										<c:when test="#{componentHelper.isInputFile(indexComponent)}">
											<cyk:inputFile value="#{indexComponent}" />
										</c:when>
										<c:when test="#{componentHelper.isInputDate(indexComponent)}">
											<cyk:inputDate value="#{indexComponent}" />
										</c:when>
										<c:when test="#{componentHelper.isInputDateTime(indexComponent)}">
											<cyk:inputDateTime value="#{indexComponent}" />
										</c:when>
										<c:when test="#{componentHelper.isInputNumber(indexComponent)}">
											<cyk:inputNumber value="#{indexComponent}" />
										</c:when>
										
										<!-- Commandable -->
										
										<c:when test="#{componentHelper.isCommandable(indexComponent)}">
											<cyk:commandable value="#{indexComponent}" />
										</c:when>
										
										<!-- Text -->
										
										<c:when test="#{componentHelper.isText(indexComponent)}">
											<cyk:text value="#{indexComponent}" />
										</c:when>
										
										<!-- File -->
										
										<c:when test="#{componentHelper.isFile(indexComponent)}">
											<cyk:file value="#{indexComponent}" />
										</c:when>
										
										<c:when test="#{componentHelper.isFileImage(indexComponent)}">
											<cyk:image value="#{indexComponent}" />
										</c:when>
										
										<!-- Link -->
										
										<c:when test="#{componentHelper.isLink(indexComponent)}">
											<cyk:link value="#{indexComponent}" />
										</c:when>
										
										<!-- Menu -->
										
										<c:when test="#{componentHelper.isMenu(indexComponent)}">
											<cyk:menu value="#{indexComponent}" />
										</c:when>
										
										<!-- View -->
										
										<c:when test="#{componentHelper.isView(indexComponent)}">
											<cyk:view value="#{indexComponent}" />
										</c:when>
										
										<!-- Insert -->
										
										<c:when test="#{componentHelper.isInsert(indexComponent)}">
											<cyk:insert value="#{indexComponent}" />
										</c:when>
										
										<!-- Layout -->
										
										<c:when test="#{componentHelper.isLayout(indexComponent)}">
											<cyk:layout value="#{indexComponent}" />
										</c:when>
										
										<!-- Grid -->
										
										<c:when test="#{componentHelper.isGrid(indexComponent)}">
											<cyk:grid value="#{indexComponent}" />
										</c:when>
										
										<c:when test="#{componentHelper.isCell(indexComponent)}">
											<cyk:cell value="#{indexComponent}" />
										</c:when>
										
										<!-- Message -->
										<c:when test="#{componentHelper.isOutputStringMessage(indexComponent)}">
											<cyk:message value="#{indexComponent}" />
										</c:when>
										
										<!-- Not found -->
										
										<c:otherwise>
											NO COMPONENT FOUND for #{indexComponent}
										</c:otherwise>
									</c:choose>
								</c:if>
								<c:if test="#{indexComponent.throwable != null}">
									<p:outputPanel id="#{indexComponent.identifier}" styleClass="ui-message ui-message-error">
										<span class="ui-message-error-icon"></span>
										<span class="ui-message-error-detail">#{indexComponent.throwableInternalizationMessage}</span>
									</p:outputPanel>
								</c:if>
							</ui:define>
						</cyk:layoutItem>
					</c:forEach>
				</ui:define>
			</cyk:layout>
		</ui:define>
	</ui:decorate>	

</ui:composition>